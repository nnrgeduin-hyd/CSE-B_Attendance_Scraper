name: Daily Selenium Scraper

on:
  schedule:
    - cron: "30 20 * * *"  # 2:00 AM IST
    - cron: "30 2 * * *"   # 8:00 AM IST
    - cron: "30 6 * * *"   # 12:00 PM IST
    - cron: "30 10 * * *"  # 4:00 PM IST   
  workflow_dispatch:

jobs:
  run-scrapers:
    runs-on: ubuntu-latest

    outputs:
      runtime: ${{ steps.runtime.outputs.now }}

    strategy:
      matrix:
        subject: [
          Classesheld_extended.py, Overall_extended.py, DAA_extended.py, CN_extended.py,
          DEVOPS_extended.py, PPL_extended.py, NLP_extended.py, CN_LAB_extended.py,
          DEVOPS_LAB_extended.py, ACS_LAB_extended.py, IPR_extended.py,
          Sports_extended.py, Mentoring_extended.py, Association_extended.py,
          Library_extended.py
        ]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Install Chromium and Chromedriver (faster method)
        run: |
          sudo apt-get update
          sudo apt-get install -y wget unzip xvfb libxi6 libgconf-2-4 libnss3 libxss1 libappindicator1 libindicator7
          wget https://storage.googleapis.com/chrome-for-testing-public/122.0.6261.111/linux64/chrome-linux64.zip
          unzip chrome-linux64.zip
          sudo mv chrome-linux64 /opt/chrome
          sudo ln -s /opt/chrome/chrome /usr/bin/chromium-browser
          wget https://storage.googleapis.com/chrome-for-testing-public/122.0.6261.111/linux64/chromedriver-linux64.zip
          unzip chromedriver-linux64.zip
          sudo mv chromedriver-linux64/chromedriver /usr/bin/chromedriver
          sudo chmod +x /usr/bin/chromedriver
          which chromium-browser
          which chromedriver

      - name: Install Python dependencies
        run: |
          pip install -r requirements.txt

      - name: Create Google credentials files (manual style)
        run: |
          echo '${{ secrets.GOOGLE_CREDENTIALS }}' > credentials.json
          echo '${{ secrets.GOOGLE_CREDENTIALS1 }}' > credentials1.json
          echo '${{ secrets.GOOGLE_CREDENTIALS2 }}' > credentials2.json
          echo '${{ secrets.GOOGLE_CREDENTIALS3 }}' > credentials3.json
          echo '${{ secrets.GOOGLE_CREDENTIALS4 }}' > credentials4.json
          echo '${{ secrets.GOOGLE_CREDENTIALS5 }}' > credentials5.json
          echo '${{ secrets.GOOGLE_CREDENTIALS6 }}' > credentials6.json
          echo '${{ secrets.GOOGLE_CREDENTIALS7 }}' > credentials7.json
          echo '${{ secrets.GOOGLE_CREDENTIALS8 }}' > credentials8.json
          echo '${{ secrets.GOOGLE_CREDENTIALS9 }}' > credentials9.json
          echo '${{ secrets.GOOGLE_CREDENTIALS10 }}' > credentials10.json
          echo '${{ secrets.GOOGLE_CREDENTIALS11 }}' > credentials11.json
          echo '${{ secrets.GOOGLE_CREDENTIALS12 }}' > credentials12.json
          echo '${{ secrets.GOOGLE_CREDENTIALS13 }}' > credentials13.json
          echo '${{ secrets.GOOGLE_CREDENTIALS14 }}' > credentials14.json
          # Add more as needed...

      - name: Get current time in IST
        id: runtime
        run: |
          export TZ=Asia/Kolkata
          echo "now=$(date '+%Y-%m-%d %H:%M:%S %Z')" >> $GITHUB_OUTPUT

      - name: Run scraper for ${{ matrix.subject }}
        run: |
          python ${{ matrix.subject }}

  notify:
    needs: run-scrapers
    runs-on: ubuntu-latest
    if: always()

    steps:
      - name: Send email notification
        uses: dawidd6/action-send-mail@v3
        with:
          server_address: smtp.gmail.com
          server_port: 465
          username: ${{ secrets.MAIL_USERNAME }}
          password: ${{ secrets.MAIL_PASSWORD }}
          subject: "Selenium Scraper Finished (Status: ${{ job.status }})"
          to: nnrg.edu.in@gmail.com
          from: "GitHub Actions Bot <${{ secrets.MAIL_USERNAME }}>"
          html_body: |
            <!DOCTYPE html>
            <html>
            <head>
              <meta charset="UTF-8">
              <style>
                body {
                  font-family: Arial, sans-serif;
                  background-color: #f5f8fa;
                  font-size: 12px;
                }
                .container {
                  max-width: 400px;
                  margin: 10px auto;
                  background-color: #ffffff;
                  border-radius: 14px;
                  border: 1px solid #e6ecf0;
                }
                .header-img {
                  width: 100%;
                  height: 70px;
                  object-fit: cover;
                  display: block;
                  border-bottom: 1px solid #e6ecf0;
                }
                .report-header {
                  text-align: center;
                  padding: 8px;
                  background: #f9fbfc;
                  border-bottom: 1px solid #e6ecf0;
                }
                .report-header h2 {
                  margin: 0;
                  font-size: 14px;
                  color: #14171a;
                }
                .report-header p {
                  margin: 2px 0;
                  font-size: 11px;
                  color: #657786;
                }
                .content {
                  padding: 10px 12px;
                }
                .status-box {
                  margin: 10px 0;
                  padding: 6px;
                  background: #f1f8ff;
                  border-left: 3px solid #1da1f2;
                  border-radius: 8px;
                }
                .btn {
                  display: inline-block;
                  padding: 6px 20px;
                  margin: 4px;
                  text-decoration: none;
                  color: white;
                  border-radius: 20px;
                  font-weight: bold;
                }
                .btn-blue { background-color: #657786; }
                .btn-red { background-color: red; }
                .btn-gray { background-color: #1da1f2; }
                .footer {
                  text-align: center;
                  padding: 6px;
                  font-size: 11px;
                  color: #657786;
                  border-top: 1px solid #e6ecf0;
                }
              </style>
            </head>
            <body>
              <div class="container">
                <img class="header-img" src="https://images.unsplash.com/photo-1557989048-03456d01a26e?w=600&auto=format&fit=crop&q=60" alt="Attendance">

                <div class="report-header">
                  <h2>Daily Attendance Scraper Report</h2>
                  <p>${{ github.event_name }} | Run #${{ github.run_number }}</p>
                </div>

                <div class="content">
                  <p><strong>Hello Nikki üëã,</strong><br>
                  The Selenium scraper has finished running.</p>

                  <div class="status-box">
                    üìå <strong>Status:</strong> <b>${{ job.status }}</b><br>
                    ‚è∞ <strong>Run Time:</strong> ${{ needs.run-scrapers.outputs.runtime }}
                  </div>

                  <p>üìÑ Click below to view:</p>
                  <p>
                    <a href="https://docs.google.com/spreadsheets/d/168dU0XLrRkVZQquAStktg_X9pMi3Vx9o9fOmbUYOUvA/edit?gid=728086314#gid=728086314" class="btn btn-blue">üìñ Open Sheet</a><br>
                    <a href="${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}" class="btn btn-red">üìú View Logs</a><br>
                    <a href="${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}" class="btn btn-gray">üîÑ Retry Workflow</a>
                  </p>

                  <p>Keep track easily! üöÄ<br>Cheers,<br>Automation Bot ü§ñ</p>
                </div>

                <div class="footer">
                  Auto Email | GitHub Actions
                </div>
              </div>
            </body>
            </html>
